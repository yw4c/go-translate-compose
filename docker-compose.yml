version: "3"
services:

###################################### Database ########################################
########################################################################################

  mysql:
    build:
      context: ./mysql
      args:
      - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
    - mysql:/var/lib/mysql
    - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
    - "${MYSQL_PORT}:3306"
    networks:
    - backend

  ### Adminer ###########################################
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - backend


###################################### Consul ##########################################
########################################################################################

#  # consul server
#  consul001:
#    image: consul
#    command: >
#      sh -c "
#        consul agent -server -data-dir /tmp/node1 -node=consul001  -bootstrap-expect=1  -bind=0.0.0.0 -client=0.0.0.0 -ui
#      "
#    ports:
#    - 8500:8500
#    networks:
#    - backend
#
#
#  # consul client
#  consul002:
#    image: consul
#    depends_on:
#    - consul001
#    command: >
#      sh -c "
#        consul agent \
#        -data-dir /tmp/node2 \
#        -node=consul002 \
#        -retry-join=consul001 \
#        -bind=0.0.0.0 \
#        -client=0.0.0.0 \
#        -config-dir /consul/config/ \
#        -enable-local-script-checks
#      "
#    volumes:
#    - ./consul/config:/consul/config
#    networks:
#    - backend


################################## Log ELK@6.5.2 ########################################
########################################################################################

#  # 收集
#  filebeat:
#    hostname: filebeat
#    image: weschen/filebeat
#    build:
#      context: filebeat
#      dockerfile: Dockerfile
#    volumes:
#    # needed to access all docker logs (read only) :
#    - /var/lib/docker/containers:/usr/share/dockerlogs/data:ro
#    # needed to access additional informations about containers
#    - /var/run/docker.sock:/var/run/docker.sock
#    - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
#    links:
#    - elasticsearch
#    networks:
#    - backend
#
#
#  # 儲存, 檢索
#  elasticsearch:
#    hostname: elasticsearch
#    image: weschen/elasticsearch
#    build:
#      context: elasticsearch
#      dockerfile: Dockerfile
#    environment:
#    - cluster.name=docker-elk-cluster
#    - bootstrap.memory_lock=true
#    - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    ports:
#    - 9200:9200
#    networks:
#    - backend
#
#
#  # UI
#  kibana:
#    image: docker.elastic.co/kibana/kibana:6.5.2
#    environment:
#    - "LOGGING_QUIET=true"
#    links:
#    - elasticsearch
#    ports:
#    - 8081:5601
#    networks:
#    - backend


###################################### Services ########################################
########################################################################################

  p005api:
    build:
      context: ./p005api
      args:
        work_path: /go/src/app
    ports:
    - 81:81
    volumes:
    - ./p005api:/go/src/app
    - ./pb:/go/src/pb
    command: >
      sh -c "
        go run src/main.go
      "
    networks:
    - backend  

  p010user:
    build:
      context: ./p010user
      args:
        work_path: /go/src/app
    ports:
      - 6010:6000
    volumes:
      - ./p010user:/go/src/app
      - ./pb:/go/src/app/src/pb
    command: >
      sh -c "
        go run src/main.go
      "
    networks:
      - backend





networks:
  backend:
    driver: "bridge"

volumes:
  elasticsearch:
    driver: local
  mysql:
    driver: local